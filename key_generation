# Key Generation: Implement functions to generate RSA key pairs using the cryptography library.
**********************************************************************************************

# Importing modules from the cryptography library for handling cryptographic operations.
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.primitives.asymmetric import rsa
# Creating a function named generate_key_pair which will generate a key pair of RSA keys.
def generate_key_pair():
    # This line generates a private key using RSA algorithm with specific parameters like public exponent and key size.
    private_key = rsa.generate_private_key(
        public_exponent=65537,
        key_size=2048
    )
    public_key = private_key.public_key()   
    return private_key, public_key

# Example usage:
private_key, public_key = generate_key_pair()
